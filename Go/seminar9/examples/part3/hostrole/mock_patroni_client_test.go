// Code generated by mockery v2.43.1. DO NOT EDIT.

package hostRole_test

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockPatroniClient is an autogenerated mock type for the PatroniClient type
type MockPatroniClient struct {
	mock.Mock
}

// YesNoCheck provides a mock function with given fields: ctx, subURL
func (_m *MockPatroniClient) YesNoCheck(ctx context.Context, subURL string) (bool, error) {
	ret := _m.Called(ctx, subURL)

	if len(ret) == 0 {
		panic("no return value specified for YesNoCheck")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (bool, error)); ok {
		return rf(ctx, subURL)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, subURL)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, subURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockPatroniClient creates a new instance of MockPatroniClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPatroniClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPatroniClient {
	mock := &MockPatroniClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
